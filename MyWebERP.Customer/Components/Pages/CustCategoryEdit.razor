@using MyWebERP.Base.Components.Pages
@using MyWebERP.Model
@inherits MyEditFormBase

<DxLayoutBreakpoint DeviceSize="DeviceSize.XSmall" @bind-IsActive="@isXSmallScreenX" />

<EditForm Model="@editItem"
OnValidSubmit="@FormSubmitted"
id="@FormId"
Context="EditFormContext">
    <DataAnnotationsValidator />
    <div>
        <DxFormLayout>

            <!-- Mã nhóm -->
            <DxFormLayoutItem ColSpanMd="12">
                <CaptionTemplate>
                    <i class="bi bi-upc me-1 align-middle"></i>
                    <span class="align-middle">@Language["Mã nhóm"]</span>
                </CaptionTemplate>
                <Template>
                    <DxTextBox @bind-Text="editItem.cust_category_code" @ref="txtCustCategoryCode" CssClass="@($"text-uppercase {(isXSmallScreenX?"form-control":"")}")"
                               NullText="@Language["Nhập mã nhóm khách hàng"]" />
                </Template>
            </DxFormLayoutItem>

            <!-- Tên nhóm -->
            <DxFormLayoutItem ColSpanMd="12">
                <CaptionTemplate>
                    <i class="bi bi-person-badge me-1 align-middle"></i>
                    <span class="align-middle">@Language["Tên nhóm"]</span>
                </CaptionTemplate>
                <Template>
                    <DxTextBox @bind-Text="editItem.cust_category_name" CssClass="@(isXSmallScreenX ? "form-control" : "")"
                               NullText="@Language["Nhập tên nhóm khách hàng"]"/>
                </Template>
            </DxFormLayoutItem>

            <!-- Ghi chú -->
            <DxFormLayoutItem ColSpanMd="12">
                <CaptionTemplate>
                    <i class="bi bi-journal-text me-1 align-middle"></i>
                    <span class="align-middle">@Language["Ghi chú"]</span>
                </CaptionTemplate>
                <Template>
                    <DxMemo @bind-Text="editItem.comment" CssClass="@(isXSmallScreenX ? "form-control" : "")"
                            NullText="@Language["Nhập ghi chú (nếu có)"]"
                            Rows="3" />
                </Template>
            </DxFormLayoutItem>

            <!-- Trạng thái sử dụng -->
            <DxFormLayoutItem ColSpanMd="12" CssClass="align-items-center">
                <CaptionTemplate>
                    <i class="bi bi-power me-1 align-middle"></i>
                    <span class="align-middle me-2">@Language["Trạng thái"]</span>
                </CaptionTemplate>
                <Template>
                    <ActiveStatusSelector @bind-Value="editItem.inactive"
                                          Horizontal="@(!isXSmallScreenX)"
                                          CssClass= "@(isXSmallScreenX ? "form-control d-flex align-items-center gap-3 flex-wrap py-1" : "null")"
                                          />

                </Template>
            </DxFormLayoutItem>

        </DxFormLayout>

    </div>
</EditForm>

@* Test thôi - để tham khảo *@
@* <CustCategoryEditPopup @bind-Visible="@CustCategoryAddNewPopupVisible"
PopupClosed="@OnCategoryAdded" /> *@

@code {
    string MyErrorMessage = "";

    DxTextBox txtCustCategoryCode;

    Model.CustCategoryModel editItem { get; set; } = new Model.CustCategoryModel();

    protected override async Task OnInitializedAsync()
    {
        MyErrorMessage = "";

        if(FormStatus == Data.EditFormStatus.NEW)
        {
            // CustCategory = new Model.CustCategoryModel();
            editItem.data_code = MenuItem.DataCode;
            editItem.company_id = CompanyId;
        }
        else
        {
            string _sFetSingleParam = await Data.MyLib.CreateFetSingleParam(CompanyId, MenuItem.IdColumnName, EditDataId);
            Model.APIResultModel _resultFetSingle = await DataService.CallMyApiSimple(_sFetSingleParam, MenuItem.FetSingleDataCode);

            if (_resultFetSingle.Status == 0)
            {
                string _sData = _resultFetSingle.Data.ToString();
                Model.CustCategoryModel custCategoryTmp = System.Text.Json.JsonSerializer.Deserialize<Model.CustCategoryModel>(_sData);

                if (custCategoryTmp != null)
                {
                    await Data.MyLib.MapObject<Model.CustCategoryModel>(editItem, custCategoryTmp);
                }
                else
                {
                    MyErrorMessage = "Không tìm thấy [Nhóm khách hàng] cần sửa. Có thể đã bị xóa.";
                }
            }

            // if(CustCategory == null)
            // {
            //     MyErrorMessage = "Không tìm thấy [Nhóm khách hàng] cần sửa. Có thể đã bị xóa.";
            // }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Phải nhớ cho vào đây, kẻo mỗi lần enter nó render lại thì nó lại nhảy về đầu tiên
            await txtCustCategoryCode.FocusAsync();
        };

        await base.OnAfterRenderAsync(firstRender);
    }
}
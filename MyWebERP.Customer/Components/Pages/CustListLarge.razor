@using Blazored.LocalStorage;
@using MyWebERP.Data;
@using MyWebERP.Services;
@using MyWebERP.Model;
@using System.Dynamic;
@using DevExpress.Blazor
@using MyWebERP.Base.Components.Pages
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;

@inherits CustListBase
    
<div class="dock-header toolbar-box-tight">
    <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained" CssClass="toolbar-inner">
        <!-- Bên trái: nút chức năng -->

        <DxToolbarItem Text="@Language["Thêm"]" IconCssClass="bi bi-plus-lg" CssClass="tb-add" BeginGroup="true" Visible="@NewPermission" Click="@NewItem_Click" />

        <DxToolbarItem Text="@Language["Sửa"]" IconCssClass="bi bi-pencil-square" CssClass="tb-edit" BeginGroup="true" Visible="@EditPermission" Click="@EditItem_Click" />
        <DxToolbarItem Text="@Language["Xóa"]" IconCssClass="bi bi-trash" CssClass="tb-delete" BeginGroup="true" Visible="@DeletePermission" Click="@DeleteItem_Click" />

        <DxToolbarItem Text="@Language["Nhập excel"]" IconCssClass="bi bi-file-earmark-arrow-up text-success me-1" CssClass="tb-import" BeginGroup="true" Visible="@NewPermission" Click="@Import_Click" />

        <DxToolbarItem Text="@Language["Lọc"]" Alignment="ToolbarItemAlignment.Right" IconCssClass="bi bi-funnel"
                       CssClass="tb-filter" BeginGroup="true" Click="async () => await ShowFilterPopup()" />
        <DxToolbarItem Text="@Language["Nạp"]" Alignment="ToolbarItemAlignment.Right" IconCssClass="bi bi-arrow-clockwise"
                       CssClass="tb-refresh" BeginGroup="true" Click="@RefreshItem_Click" />
        <!-- nút trang trước -->
        <DxToolbarItem Alignment="ToolbarItemAlignment.Right" IconCssClass="bi bi-chevron-left"
                       CssClass="tb-page-prev" BeginGroup="true" Click="@(e => SelectPageNoChanged(pageNo - 1))" />
        @* <DxToolbarItem Text=@($"{@Language["Trang"]} {pageNo}") Alignment="ToolbarItemAlignment.Right" IconCssClass="bi chevron-left"
                       CssClass="tb-page-curent" /> *@
        <DxToolbarItem Alignment="ToolbarItemAlignment.Right" Context="pageNoItem">
            <div class="d-flex align-items-center gap-1">
                <select style="width:250px; height:var(--dxbl-toolbar-height); font-size:0.875rem;"
                        @onchange="@(async e => await SelectPageNoChanged(Convert.ToInt32(e.Value)))">
                    @foreach (var i in Pages)
                    {
                        <option value="@i" selected="@(i == pageNo)">
                            @($"Trang {i:N0}/{pageCount:N0} {GetRowRange(i)}")
                        </option>
                    }
                </select>
            </div>
        </DxToolbarItem>
        <!-- nút trang kế -->
        <DxToolbarItem Alignment="ToolbarItemAlignment.Right" IconCssClass="bi bi-chevron-right"
                       CssClass="tb-page-next" BeginGroup="true" Click="@(e => SelectPageNoChanged(pageNo + 1))" />
        @* <DxToolbarItem Text=@($"/ {pageCountText}") Alignment="ToolbarItemAlignment.Right" IconCssClass="bi chevron-left"
                       CssClass="tb-page-total" /> *@

        <DxToolbarItem Alignment="ToolbarItemAlignment.Right" Context="itemPageSizes">
            <div class="d-flex align-items-center gap-1">
                @* <select style="width:90px; height:var(--dxbl-toolbar-height); font-size:0.875rem;"
                        @bind="pageSize">
                    @foreach (var size in PageSizes)
                    {
                        <option value="@size">@size.ToString("N0")</option>
                    }
                </select> *@

                <select style="width:90px; height:var(--dxbl-toolbar-height); font-size:0.875rem;"
                        @onchange="@(async e => await SelectPageSizeChanged(Convert.ToInt32(e.Value)))">
                    @foreach (var size in PageSizes)
                    {
                        <option value="@size" selected="@(size == pageSize)">@size.ToString("N0")</option>
                    }
                </select>
            </div>
        </DxToolbarItem>

    </DxToolbar>
</div>

<div class="dock-body" style="position: relative;">
    @if (IsLoading)
    {
        @* Làm mờ khi load dữ liệu*@
        <div class="loading-overlay">
            <div class="spinner-border text-primary"></div>
            <span class="ms-2">@($"{Language["Đang tải dữ liệu"]}...")</span>
        </div>
    }

    <DxSplitter CssClass="main-splitter" Orientation="Orientation.Vertical">
        <Panes>
            <DxSplitterPane Size="60%" AllowCollapse="true" CssClass="default-splitter-pane">
                    <DxGrid @ref="Grid" 
                    Data="@Data"
                    KeyFieldName="@nameof(CustomerModel.customer_id)"
                    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                    FooterDisplayMode="GridFooterDisplayMode.Never"
                    CustomizeElement="Grid_CustomizeElement"
                        CssClass="default-grid"
                    VirtualScrollingEnabled="true"    
                    TextWrapEnabled="true"
                    FocusedRowEnabled="true"
                    HighlightRowOnHover="true"
                    FocusedRowChanged="Grid_FocusedRowChanged"
                    ShowFilterRow="true"
                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                    ShowAllRows="true"
                    ValidationEnabled="true"
                                ColumnCaptionAlignment="GridTextAlignment.Center"
                                
                            DetailRowDisplayMode="@GridDetailRowDisplayMode"
                    SearchText="@GridSearchText">
                        <Columns>
                                <!-- Số thứ tự -->
                                <DxGridDataColumn Width="40"
                                                  TextAlignment="GridTextAlignment.Center"
                                                  AllowSort="false"
                                                  FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                                                <HeaderCaptionTemplate>
                                        <div style="text-align:center">#</div>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate>@(context.VisibleIndex + 1)</CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Mã khách -->
                        <DxGridDataColumn FieldName="customer_code" Width="@(isXSmallScreen ? "20%" : "100px")" FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                    <HeaderCaptionTemplate>
                                        <i class="bi bi-upc icon-code me-1" title="@Language["Mã khách hàng"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Mã khách"]</span>
                                    </HeaderCaptionTemplate>
                                </DxGridDataColumn>

                                <!-- Tên khách + Địa chỉ -->
                                <DxGridDataColumn FieldName="customer_name_full_address" Width="@(isXSmallScreen?"80%":"300px")"
                                          FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                    <HeaderCaptionTemplate>
                                        <div>
                                            <i class="bi bi-person icon-person me-1" title="@Language["Tên khách, địa chỉ"]"></i>
                                            <i class="bi bi-geo-alt icon-location me-1" title="@Language["Địa chỉ"]"></i>
                                             <span class="d-none d-sm-inline">@Language["Khách hàng"]</span>
                                        </div>
                                         @* <div>
                                            <i class="bi bi-geo-alt text-danger me-1" title="Địa chỉ"></i>
                                            <span class="d-none d-sm-inline">Địa chỉ</span>
                                         </div> *@
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        @* <div class="fw-bold">@cell.Value</div> *@
                                        <div class="fw-bold">@cell.Grid.GetRowValue(cell.VisibleIndex, "customer_name")</div>
                                        @* <div class="d-flex flex-column small text-muted">
                                            <a href="tel:@cell.Grid.GetRowValue(cell.VisibleIndex, "tel")"
                                               class="text-decoration-none text-primary">
                                                <i class="bi bi-telephone me-1"></i>
                                                @cell.Grid.GetRowValue(cell.VisibleIndex, "tel")
                                            </a>
                                            <a href="mailto:@cell.Grid.GetRowValue(cell.VisibleIndex, "email")"
                                               class="text-decoration-none text-secondary">
                                                <i class="bi bi-envelope me-1"></i>
                                                @cell.Grid.GetRowValue(cell.VisibleIndex, "email")
                                            </a>
                                        </div> *@
                                        <div class="small text-muted">
                                            <i class="bi bi-geo-alt icon-location me-1"></i>
                                            @{
                                                var fullAddress = Convert.ToString(cell.Grid.GetRowValue(cell.VisibleIndex, "full_address"));
                                            }
                                            @(!string.IsNullOrWhiteSpace(fullAddress) ? fullAddress : @Language["Chưa cập nhật"])
                                        </div>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <DxGridDataColumn FieldName="tel_email" Width="170" Visible=@(!isXSmallScreen)
                                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                    <HeaderCaptionTemplate>
                                        @* <i class="bi bi-geo-alt" title="Điện thoại, email"></i> *@
                                        @* <i class="bi bi-telephone me-1"></i>
                                        <i class="bi bi-envelope me-1"></i> *@
                                        <i class="bi bi-person-vcard"></i>
                                        <span class="d-none d-sm-inline">@Language["Liên hệ"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        <div class="fw-bold">
                                            <i class="bi bi-telephone me-1"></i>
                                            @cell.Grid.GetRowValue(cell.VisibleIndex, "tel")
                                            @* <a href="tel:@cell.Value"
                                               class="text-decoration-none text-primary">
                                                <i class="bi bi-telephone me-1"></i>
                                                @cell.Value
                                            </a>  *@ @* Đoạn này là click vào để gọi chưa dùng *@                                   
                                        </div>
                                        <div class="small text-muted">
                                            @* <a href="mailto:@cell.Grid.GetRowValue(cell.VisibleIndex, "email")"
                                               class="text-decoration-none text-secondary">
                                                <i class="bi bi-envelope me-1"></i>
                                                @cell.Grid.GetRowValue(cell.VisibleIndex, "email")
                                            </a> bấm vào để gửi mail - chưa dùng *@

                                            <i class="bi bi-envelope me-1"></i>
                                            @cell.Grid.GetRowValue(cell.VisibleIndex, "email")
                                        </div>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Xưng hô + Giới tính -->
                        <DxGridDataColumn FieldName="vocative" Width="120" Visible=@(!isXSmallScreen)
                                          FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                                                <HeaderCaptionTemplate>
                                        <i class="bi bi-person" title="@Language["Xưng hô, giới tính"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Xưng hô, giới tính"]</span>
                                        @* <span class="d-none d-sm-inline">
                                            Xưng hô<br />Giới tính
                                        </span> *@
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        <div>
                                            <i class="bi bi-person-circle me-1"></i>@cell.Value
                                        </div>
                                <div class="small text-success">
                                            @{
                                                var gender = Convert.ToString(cell.Grid.GetRowValue(cell.VisibleIndex, "gender"));
                                            }
                                            @if (gender == "Nam" | gender == "Male")
                                            {
                                                <span><i class="bi bi-gender-male text-primary me-1"></i>@Language["Nam"]</span>
                                            }
                                            else if (gender == "Nữ" | gender=="Female")
                                            {
                                                <span><i class="bi bi-gender-female text-danger me-1"></i>@Language["Nữ"]</span>
                                            }
                                            else
                                            {
                                                <span><i class="bi bi-gender-ambiguous me-1"></i>@Language["Khác"]</span>
                                            }
                                        </div>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Cá nhân / Tổ chức -->
                        <DxGridDataColumn FieldName="is_personal" Width="100" Visible=@(!isXSmallScreen)
                                    TextAlignment="GridTextAlignment.Left"
                                          FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                    <HeaderCaptionTemplate>
                                        <i class="bi bi-person-lines-fill" title="@Language["Loại khách hàng"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Phân loại"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        @if (Convert.ToInt16(cell.Value) == 1)
                                        {
                                    <span><i class="bi bi-person-check icon-person me-1 text-success"></i>@Language["Cá nhân"]</span>
                                        }
                                        else
                                        {
                                    <span><i class="bi bi-buildings icon-group me-1"></i>@Language["Tổ chức"]</span>
                                        }
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Nhóm khách -->
                        <DxGridDataColumn FieldName="cust_category_name" Width="150px" Visible=@(!isXSmallScreen)>
                                                                <HeaderCaptionTemplate>
                                        <i class="bi bi-people icon-group" title="@Language["Nhóm khách hàng"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Nhóm khách"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        @* <i class="bi bi-people me-1"></i> *@
                                        @cell.Value
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Ghi chú -->
                        <DxGridDataColumn FieldName="comment" MinWidth="150" Visible=@(!isXSmallScreen)
                            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                                                <HeaderCaptionTemplate>
                                        <i class="bi bi-journal-text icon-note" title="@Language["Ghi chú"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Ghi chú"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                        @* <i class="bi bi-journal-text me-1"></i> *@
                                        @* @cell.Value *@
                                @if (!string.IsNullOrEmpty(cell.DisplayText))
                                {
                                    <div class="text-body-secondary small d-flex align-items-start gap-1">
                                        <i class="bi bi-journal-text icon-note small opacity-75"></i>
                                        <span>@cell.DisplayText</span>
                                    </div>
                                }
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Trạng thái -->
                        <DxGridDataColumn FieldName="@nameof(CustomerModel.inactive_status)" Width="100px"
                            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                    <HeaderCaptionTemplate>
                                        <i class="bi bi-power" title="@Language["Trạng thái sử dụng"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Trạng thái"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                <StatusCell Value="@(Convert.ToString(cell.Value))" />

                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Người tạo / Ngày tạo -->
                        <DxGridDataColumn FieldName="created_by_display_name" Width="160" Visible=@(!isXSmallScreen)
                            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                                                <HeaderCaptionTemplate>
                                        <i class="bi bi-person-badge" title="@Language["Người tạo / Ngày tạo"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Tạo"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                <CreatedInfoCell Creator="@cell.Value" CreatedOn="@cell.Grid.GetRowValue(cell.VisibleIndex, "created_on_date")"></CreatedInfoCell>

                                    </CellDisplayTemplate>
                                </DxGridDataColumn>

                                <!-- Người sửa / Ngày sửa -->
                        <DxGridDataColumn FieldName="last_modified_by_display_name" Width="160" Visible=@(!isXSmallScreen)
                            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Never">
                                                                <HeaderCaptionTemplate>
                                        <i class="bi bi-person-fill-gear" title="@Language["Người sửa / Ngày sửa"]"></i>
                                        <span class="d-none d-sm-inline">@Language["Cập nhật"]</span>
                                    </HeaderCaptionTemplate>
                                    <CellDisplayTemplate Context="cell">
                                <ModifiedInfoCell Modifier="@cell.Value" ModifiedOn="@cell.Grid.GetRowValue(cell.VisibleIndex, "last_modified_on_date")"></ModifiedInfoCell>

                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                        </Columns>
                        <TotalSummary>
                        <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="@nameof(CustomerModel.customer_code)" DisplayText="@($"{0:N0} {@Language["dòng"]}")" Visible=@(!isXSmallScreen) />
                        </TotalSummary>
                    <EmptyDataAreaTemplate>
                        @* Không hiển thị gì, hoặc hiển thị custom text *@
                        <div style="height:0;">@Language["Không có dữ liệu"]</div>
                        @* Hoặc muốn custom thông báo: <span>Chưa có dữ liệu</span> *@
                    </EmptyDataAreaTemplate>
                    </DxGrid>
            </DxSplitterPane>

            @* Phải có CssClass = "detail-pane" để fill, không bị tràn trang*@
            <DxSplitterPane AllowCollapse="true" CssClass="detail-pane">
                @if (menuItem != null && menuItem.Tabs.Count > 0)
                {
                    MenuItem mnuContact = menuItem.Tabs.FirstOrDefault(x => x.DataCode == "CUST_CONTACT");
                    MenuItem mnuSO001 = menuItem.Tabs.FirstOrDefault(x => x.DataCode == "SO001");

                    <DxTabs @bind-ActiveTabIndex="@ActiveTabIndex">
                        @if(mnuContact != null)
                        {                    
                            <DxTabPage Text="Liên hệ">
                                <div class="detail-tabpage">
                                    @* Phải có div này để fill đầy và không bị tràn trang *@
                                    <CustListContact CustomerId="@FocusedDataId" MenuItem="@mnuContact"></CustListContact>
                                </div>
                            </DxTabPage>
                        }

                        @if (mnuSO001 != null)
                        {
                            <DxTabPage Text="Lịch sử đơn hàng">
                                <CustListSO001 CustomerId="@FocusedDataId" MenuItem="@mnuSO001"></CustListSO001>
                            </DxTabPage>
                        }
                    </DxTabs>
                }
            </DxSplitterPane>
        </Panes>
    </DxSplitter>
</div>

<DxWindow @ref=windowRef
AllowResize="true"
ShowCloseButton="true"
CloseOnEscape="true"
HeaderText="@MyHeaderErrorMessage"
FooterText="Footer"
ShowFooter="true"
Width="max(25vw, 250px)"
MinWidth="300"
MinHeight="200"
MaxWidth="800"
MaxHeight="500">
    <BodyContentTemplate>
        <div style="color:red">@MyErrorMessage</div>
    </BodyContentTemplate>
    <FooterContentTemplate>
        <DxButton CssClass="popup-button my-1 ms-2"
        RenderStyle="ButtonRenderStyle.Primary" Text="OK" Click="@context.CloseCallback" />
    </FooterContentTemplate>
</DxWindow>

@if (menuItem != null)
{
    <CustEditPopup @bind-Visible="@EditFormVisible"
    CompanyId="@CompanyId"
    EditDataId="@FocusedDataId"
                   MenuItem="@menuItem"
                   PopupWidth="70vw"
                   Language="@Language"
                   LocalStorageService="@LocalStorageService"
    DataService="@DataService"
    FormStatus="@EditFormStatus"
    
    PopupClosed="@OnCustomerSubmit" />
}

<CustFilterConditionPopup @ref="filterPopup"
                         CompanyId="@CompanyId"
                         CompanyMenuId="@CompanyMenuId"
                         SelectedProvinces="ListProvinceSelected"
                         SelectedDistricts="ListDistrictSelected"
                         FilterText="@FilterText"
                         OnConfirm="HandleFilterConfirm" />

@code {
    int ActiveTabIndex { get; set; } = 0;

    protected override async Task Grid_FocusedRowChanged(GridFocusedRowChangedEventArgs args)
    {
        await base.Grid_FocusedRowChanged(args);
        if(Data == null)
        {
            FocusedDataId = "";
            return;
        }

        selectedModel = Data[args.VisibleIndex];
        if (selectedModel == null)
        {
            FocusedDataId = "";
        }
        else
        {
            FocusedDataId = selectedModel.customer_id;
        }
    }

    private async Task Import_Click()
    {
        // 1️⃣ Set các tham số filter vào dParam
        dynamic dParam = new System.Dynamic.ExpandoObject();
        dParam.company_id = CompanyId;
        dParam.data_code = menuItem.DataCode;
        dParam.page_size = pageSize;
        dParam.page_number = pageNo;
        dParam.filter = FilterText;
        dParam.province_ids = string.Join(",", ListProvinceSelected?.Select(x => x.province_id) ?? Enumerable.Empty<string>());
        dParam.district_ids = string.Join(",", ListDistrictSelected?.Select(x => x.district_id) ?? Enumerable.Empty<string>());

        // 2️⃣ Lưu dParam vào LocalStorage
        await LocalStorageService.SetItemAsync(FILTER_PARAM_IN_LOCAL_STORAGE, dParam);

        // 3️⃣ Điều hướng sang page import
        NavigationManager.NavigateTo($"/listcustomer/import/{CompanyMenuId}");
    }
}

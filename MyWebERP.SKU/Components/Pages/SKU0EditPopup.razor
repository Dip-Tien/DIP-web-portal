@using MyWebERP.Base.Components.Pages

@inherits MyEditPopupBase

<DxPopup
Visible="@Visible"
         CloseOnOutsideClick = "false"
ShowFooter="true"
HeaderText=@FormTitle
VisibleChanged="@VisibleChanged">
    <BodyContentTemplate>
        <SKU0Edit FormId="@FormId" 
        FormSubmitted="@OnFormSubmitted"
        CompanyId="@CompanyId"
        EditDataId="@EditDataId"
        FormStatus="@FormStatus"
                  MenuItem="@MenuItem"
        LocalStorageService="@LocalStorageService"
        DataService="@DataService"
        />
    </BodyContentTemplate>
    <FooterContentTemplate>
        @if (String.IsNullOrEmpty(MyErrorMessage) == false)
        {
            <div style="color:red">@MyErrorMessage</div>
        }
        <DxButton CssClass="popup-button my-1 ms-2"
                  RenderStyle="ButtonRenderStyle.Primary"
                  Text="Lưu (Ctrl + S)"
                  Id="btnSubmit"
        SubmitFormOnClick="true"
        form="@FormId" />
        <DxButton CssClass="popup-button my-1 ms-2"
        RenderStyle="ButtonRenderStyle.Secondary"
        Text="Hủy"
        Click="@(async() => await VisibleChanged.InvokeAsync(false))" />
    </FooterContentTemplate>
</DxPopup>

@code {
    readonly string FormId = "SKU0EditPopup";    
    [Parameter] public EventCallback<Model.SKU0Model> PopupClosed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (FormStatus == Data.EditFormStatus.NEW)
            FormTitle = "Thêm sản phẩm/vật tư";
        else
            FormTitle = "Sửa sản phẩm/vật tư";
    }

    async Task OnFormSubmitted(EditContext editContext) {
        var editModel = (Model.SKU0Model)editContext.Model;

        string sApiCode = FormStatus == Data.EditFormStatus.NEW ? MenuItem.InsDataCode: MenuItem.UpdDataCode;
        Model.APIResultModel _resultIns = await DataService.CallMyApi(editModel, sApiCode);

        if (_resultIns.Status != 0)
        {
            MyErrorMessage = _resultIns.StatusDetails;

            return;
        }

        var modelSaved = Newtonsoft.Json.JsonConvert.DeserializeObject<Model.SKU0Model>(_resultIns.Data.ToString());

        await VisibleChanged.InvokeAsync(false);
        await PopupClosed.InvokeAsync(modelSaved);
    }
}